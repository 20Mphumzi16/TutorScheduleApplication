{"ast":null,"code":"import { getCart } from '../services/cartService'; // Adjust the import path as necessary\n\nexport default {\n  name: 'CartSummary',\n  data() {\n    return {\n      cartItems: [],\n      loading: true,\n      error: null\n    };\n  },\n  computed: {\n    cartTotal() {\n      return this.cartItems.reduce((total, item) => {\n        return total + item.price * item.quantity;\n      }, 0);\n    }\n  },\n  mounted() {\n    this.fetchCartItems();\n  },\n  methods: {\n    async fetchCartItems() {\n      try {\n        this.loading = true;\n        const cartId = '1'; // Replace with actual cart ID logic\n        const response = await getCart(cartId);\n        this.cartItems = response.data.items; // Assuming the API response contains an 'items' array\n      } catch (error) {\n        this.error = 'Failed to load cart items.';\n        console.error(error);\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["getCart","name","data","cartItems","loading","error","computed","cartTotal","reduce","total","item","price","quantity","mounted","fetchCartItems","methods","cartId","response","items","console"],"sources":["C:\\Users\\User\\Documents\\IntelliJ Projects 2024\\comic_city_project\\src\\frontend\\src\\components\\CartSummary.vue"],"sourcesContent":["<template>\r\n  <div class=\"cart-summary\" v-if=\"cartItems.length\">\r\n    <div v-for=\"item in cartItems\" :key=\"item.id\" class=\"cart-item\">\r\n      <div\r\n          class=\"cart-item-image\"\r\n          :style=\"{ backgroundImage: `url(${item.image})` }\"\r\n      ></div>\r\n      <div class=\"cart-item-details\">\r\n        <p class=\"text-base\">{{ item.title }}</p>\r\n        <p class=\"text-sm\">{{ item.price }} â€¢ {{ item.quantity }}</p>\r\n      </div>\r\n    </div>\r\n    <div class=\"cart-footer\">\r\n      <div>\r\n        <p class=\"text-sm\">Total: ${{ cartTotal }}</p>\r\n        <p class=\"text-sm\">Items: {{ cartItems.length }}</p>\r\n      </div>\r\n      <div class=\"cart-footer-actions\">\r\n        <a href=\"#\" class=\"view-cart\">View Cart</a>\r\n        <button class=\"checkout\">Checkout</button>\r\n\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport {getCart} from '../services/cartService'; // Adjust the import path as necessary\r\n\r\nexport default {\r\n  name: 'CartSummary',\r\n  data() {\r\n    return {\r\n      cartItems: [],\r\n      loading: true,\r\n      error: null,\r\n    };\r\n  },\r\n  computed: {\r\n    cartTotal() {\r\n      return this.cartItems.reduce((total, item) => {\r\n        return total + item.price * item.quantity;\r\n      }, 0);\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchCartItems();\r\n  },\r\n  methods: {\r\n    async fetchCartItems() {\r\n      try {\r\n        this.loading = true;\r\n        const cartId = '1'; // Replace with actual cart ID logic\r\n        const response = await getCart(cartId);\r\n        this.cartItems = response.data.items; // Assuming the API response contains an 'items' array\r\n      } catch (error) {\r\n        this.error = 'Failed to load cart items.';\r\n        console.error(error);\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Cart Summary styles (as in your previous style section) */\r\n.cart-summary {\r\n  display: none;\r\n  position: absolute;\r\n  right: 0;\r\n  top: 100%;\r\n  width: 300px;\r\n  background-color: #1e2a38;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\r\n  padding: 1rem;\r\n  z-index: 1000;\r\n}\r\n\r\n.cart-item {\r\n  display: flex;\r\n  gap: 1rem;\r\n  background-color: #2a3a4b;\r\n  padding: 0.75rem;\r\n  border-bottom: 1px solid #444;\r\n}\r\n\r\n.cart-item:last-child {\r\n  border-bottom: none;\r\n}\r\n\r\n.cart-item-image {\r\n  background-size: cover;\r\n  background-position: center;\r\n  width: 70px;\r\n  height: 70px;\r\n  border-radius: 8px;\r\n}\r\n\r\n.cart-item-details {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n}\r\n\r\n.text-sm {\r\n  color: #a0b3c2;\r\n}\r\n\r\n.text-base {\r\n  color: #e0e0e0;\r\n}\r\n\r\n.cart-footer {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 0.75rem 0;\r\n}\r\n\r\n.cart-footer-actions {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.view-cart {\r\n  background-color: #2c3e50;\r\n  color: white;\r\n  text-align: center;\r\n  font-weight: bold;\r\n  padding: 0.5rem;\r\n  border-radius: 8px;\r\n  text-decoration: none;\r\n}\r\n\r\n.checkout {\r\n  background-color: #3498db;\r\n  color: white;\r\n  font-weight: bold;\r\n  padding: 0.5rem;\r\n  border-radius: 8px;\r\n  border: none;\r\n  cursor: pointer;\r\n}\r\n</style>\r\n"],"mappings":"AA6BA,SAAQA,OAAO,QAAO,yBAAyB,EAAE;;AAEjD,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,EAAE;MACbC,OAAO,EAAE,IAAI;MACbC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,SAASA,CAAA,EAAG;MACV,OAAO,IAAI,CAACJ,SAAS,CAACK,MAAM,CAAC,CAACC,KAAK,EAAEC,IAAI,KAAK;QAC5C,OAAOD,KAAI,GAAIC,IAAI,CAACC,KAAI,GAAID,IAAI,CAACE,QAAQ;MAC3C,CAAC,EAAE,CAAC,CAAC;IACP;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,cAAc,CAAC,CAAC;EACvB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,cAAcA,CAAA,EAAG;MACrB,IAAI;QACF,IAAI,CAACV,OAAM,GAAI,IAAI;QACnB,MAAMY,MAAK,GAAI,GAAG,EAAE;QACpB,MAAMC,QAAO,GAAI,MAAMjB,OAAO,CAACgB,MAAM,CAAC;QACtC,IAAI,CAACb,SAAQ,GAAIc,QAAQ,CAACf,IAAI,CAACgB,KAAK,EAAE;MACxC,EAAE,OAAOb,KAAK,EAAE;QACd,IAAI,CAACA,KAAI,GAAI,4BAA4B;QACzCc,OAAO,CAACd,KAAK,CAACA,KAAK,CAAC;MACtB,UAAU;QACR,IAAI,CAACD,OAAM,GAAI,KAAK;MACtB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}