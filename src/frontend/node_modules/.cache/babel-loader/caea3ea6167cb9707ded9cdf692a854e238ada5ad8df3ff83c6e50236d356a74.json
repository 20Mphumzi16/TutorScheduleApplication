{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getCustomerCart, removeBookFromCart } from \"@/services/cartService\";\nimport Notification from \"@/components/NotificationComponent.vue\";\nexport default {\n  name: 'CartSummary',\n  components: {\n    Notification\n  },\n  props: {\n    cartId: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      cart: '',\n      cartItems: [],\n      cartTotal: 0,\n      notification: {\n        message: '',\n        duration: 3000\n      }\n    };\n  },\n  async mounted() {\n    await this.fetchCart();\n  },\n  methods: {\n    async fetchCart() {\n      const userEmail = localStorage.getItem('userEmail');\n      if (!userEmail) {\n        console.error('User email not found. Please log in.');\n        this.$router.push('/');\n      }\n      try {\n        const response = await getCustomerCart(userEmail);\n        this.cart = response.data;\n        this.cartItems = this.cart.comicBooks;\n        this.cartTotal = this.cartItems.reduce((total, item) => total + item.price * item.quantity, 0);\n\n        // Emit the cart item count to the parent component\n        this.$emit('update-cart-count', this.cartItems.length);\n      } catch (error) {\n        console.error('Error fetching cart items:', error);\n      }\n    },\n    async removeItem(sku) {\n      const isConfirmed = confirm('Are you sure you want to remove this item from the cart?');\n      if (isConfirmed) {\n        try {\n          await removeBookFromCart(this.cart.cartId, sku);\n          this.cartTotal = 0;\n          await this.fetchCart(); // Refresh the cart list\n          this.notification.message = 'Item removed successfully';\n        } catch (error) {\n          console.error('Error removing item from cart:', error);\n        }\n      }\n    },\n    getPhotoUrl(photo) {\n      return `data:image/jpeg;base64,${photo}`;\n    },\n    formatPrice(price) {\n      // Format the price as a string with the currency symbol\n      return `R${price.toFixed(2)}`;\n    }\n  }\n};","map":{"version":3,"names":["getCustomerCart","removeBookFromCart","Notification","name","components","props","cartId","type","String","required","data","cart","cartItems","cartTotal","notification","message","duration","mounted","fetchCart","methods","userEmail","localStorage","getItem","console","error","$router","push","response","comicBooks","reduce","total","item","price","quantity","$emit","length","removeItem","sku","isConfirmed","confirm","getPhotoUrl","photo","formatPrice","toFixed"],"sources":["C:\\Users\\PC\\Documents\\javaApplications\\My_comic_city_project_0.2\\src\\frontend\\src\\components\\CartSummary.vue"],"sourcesContent":["<template>\r\n  <div class=\"cart-summary\" v-if=\"cartItems.length\">\r\n    <h2>Cart</h2>\r\n    <div v-for=\"item in cartItems\" :key=\"item.sku\" class=\"cart-item\">\r\n      <!-- Remove Button -->\r\n      <div class=\"remove-item\" @click=\"removeItem(item.sku)\">×</div>\r\n\r\n      <!-- Item Image -->\r\n      <div\r\n          class=\"cart-item-image\"\r\n          :style=\"{ backgroundImage: `url(${getPhotoUrl(item.photo)})` }\"\r\n      ></div>\r\n\r\n      <!-- Item Details -->\r\n      <div class=\"cart-item-details\">\r\n        <p class=\"text-base\">{{ item.name }}</p>\r\n        <p class=\"text-sm\">{{ item.price }} • {{ item.quantity }}</p>\r\n      </div>\r\n    </div>\r\n    <div class=\"cart-footer\">\r\n      <div>\r\n        <p class=\"text-sm\">Total: {{ formatPrice(cartTotal) }}</p>\r\n        <p class=\"text-sm\">Items: {{ cartItems.length }}</p>\r\n      </div>\r\n      <div class=\"cart-footer-actions\">\r\n        <router-link to=\"/cart\"><a href=\"#\" class=\"view-cart\">View Cart</a></router-link>\r\n        <button class=\"checkout\">Checkout</button>\r\n      </div>\r\n    </div>\r\n    <Notification v-if=\"notification.message\" :message=\"notification.message\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getCustomerCart, removeBookFromCart} from \"@/services/cartService\";\r\nimport Notification from \"@/components/NotificationComponent.vue\";\r\n\r\nexport default {\r\n  name: 'CartSummary',\r\n  components: { Notification },\r\n  props: {\r\n    cartId: {\r\n      type: String,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      cart:'',\r\n      cartItems: [],\r\n      cartTotal: 0,\r\n      notification: {\r\n        message: '',\r\n        duration: 3000\r\n      }\r\n    };\r\n  },\r\n  async mounted() {\r\n    await this.fetchCart();\r\n  },\r\n  methods: {\r\n\r\n    async fetchCart() {\r\n      const userEmail=localStorage.getItem('userEmail');\r\n      if (!userEmail) {\r\n        console.error('User email not found. Please log in.');\r\n        this.$router.push('/');\r\n      }\r\n      try {\r\n        const response = await getCustomerCart(userEmail);\r\n        this.cart = response.data;\r\n        this.cartItems = this.cart.comicBooks;\r\n        this.cartTotal = this.cartItems.reduce((total, item) => total + item.price * item.quantity, 0);\r\n\r\n        // Emit the cart item count to the parent component\r\n        this.$emit('update-cart-count', this.cartItems.length);\r\n      } catch (error) {\r\n        console.error('Error fetching cart items:', error);\r\n      }\r\n    },\r\n    async removeItem(sku) {\r\n      const isConfirmed = confirm('Are you sure you want to remove this item from the cart?');\r\n      if (isConfirmed) {\r\n        try {\r\n          await removeBookFromCart(this.cart.cartId, sku);\r\n          this.cartTotal=0\r\n          await this.fetchCart(); // Refresh the cart list\r\n          this.notification.message = 'Item removed successfully';\r\n        } catch (error) {\r\n          console.error('Error removing item from cart:', error);\r\n        }\r\n      }\r\n    },\r\n    getPhotoUrl(photo) {\r\n      return `data:image/jpeg;base64,${photo}`;\r\n    },\r\n    formatPrice(price) {\r\n      // Format the price as a string with the currency symbol\r\n      return `R${price.toFixed(2)}`;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n/* Cart Summary styles */\r\n.cart-summary {\r\n  display: block;\r\n  position: absolute;\r\n  right: 0;\r\n  top: 100%;\r\n  width: 300px;\r\n  background-color: #1e2a38;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\r\n  padding: 1rem;\r\n  z-index: 1000;\r\n}\r\n\r\n.cart-item {\r\n  display: flex;\r\n  gap: 1rem;\r\n  background-color: #2a3a4b;\r\n  padding: 0.75rem;\r\n  border-bottom: 1px solid #444;\r\n  position: relative; /* Needed for positioning the remove button */\r\n}\r\n\r\n.cart-item:last-child {\r\n  border-bottom: none;\r\n}\r\n\r\n.cart-item-image {\r\n  background-size: cover;\r\n  background-position: center;\r\n  width: 70px;\r\n  height: 70px;\r\n  border-radius: 8px;\r\n}\r\n\r\n.cart-item-details {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n}\r\n\r\n.text-sm {\r\n  color: #a0b3c2;\r\n}\r\n\r\n.text-base {\r\n  color: #e0e0e0;\r\n}\r\n\r\n.cart-footer {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 0.75rem 0;\r\n}\r\n\r\n.cart-footer-actions {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.view-cart {\r\n  background-color: #2c3e50;\r\n  color: white;\r\n  text-align: center;\r\n  font-weight: bold;\r\n  padding: 0.5rem;\r\n  border-radius: 8px;\r\n  text-decoration: none;\r\n}\r\n\r\n.checkout {\r\n  background-color: #3498db;\r\n  color: white;\r\n  font-weight: bold;\r\n  padding: 0.5rem;\r\n  border-radius: 8px;\r\n  border: none;\r\n  cursor: pointer;\r\n}\r\n\r\n/* Remove Button styles */\r\n.remove-item {\r\n  position: absolute;\r\n  top: -8px;\r\n  right: -8px;\r\n  background-color: red;\r\n  color: white;\r\n  border-radius: 50%;\r\n  width: 20px;\r\n  height: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n}\r\n</style>\r\n"],"mappings":";AAkCA,SAASA,eAAe,EAAEC,kBAAkB,QAAO,wBAAwB;AAC3E,OAAOC,YAAW,MAAO,wCAAwC;AAEjE,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,UAAU,EAAE;IAAEF;EAAa,CAAC;EAC5BG,KAAK,EAAE;IACLC,MAAM,EAAE;MACNC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAC,EAAE;MACPC,SAAS,EAAE,EAAE;MACbC,SAAS,EAAE,CAAC;MACZC,YAAY,EAAE;QACZC,OAAO,EAAE,EAAE;QACXC,QAAQ,EAAE;MACZ;IACF,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,MAAM,IAAI,CAACC,SAAS,CAAC,CAAC;EACxB,CAAC;EACDC,OAAO,EAAE;IAEP,MAAMD,SAASA,CAAA,EAAG;MAChB,MAAME,SAAS,GAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MACjD,IAAI,CAACF,SAAS,EAAE;QACdG,OAAO,CAACC,KAAK,CAAC,sCAAsC,CAAC;QACrD,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;MACxB;MACA,IAAI;QACF,MAAMC,QAAO,GAAI,MAAM3B,eAAe,CAACoB,SAAS,CAAC;QACjD,IAAI,CAACT,IAAG,GAAIgB,QAAQ,CAACjB,IAAI;QACzB,IAAI,CAACE,SAAQ,GAAI,IAAI,CAACD,IAAI,CAACiB,UAAU;QACrC,IAAI,CAACf,SAAQ,GAAI,IAAI,CAACD,SAAS,CAACiB,MAAM,CAAC,CAACC,KAAK,EAAEC,IAAI,KAAKD,KAAI,GAAIC,IAAI,CAACC,KAAI,GAAID,IAAI,CAACE,QAAQ,EAAE,CAAC,CAAC;;QAE9F;QACA,IAAI,CAACC,KAAK,CAAC,mBAAmB,EAAE,IAAI,CAACtB,SAAS,CAACuB,MAAM,CAAC;MACxD,EAAE,OAAOX,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IACD,MAAMY,UAAUA,CAACC,GAAG,EAAE;MACpB,MAAMC,WAAU,GAAIC,OAAO,CAAC,0DAA0D,CAAC;MACvF,IAAID,WAAW,EAAE;QACf,IAAI;UACF,MAAMrC,kBAAkB,CAAC,IAAI,CAACU,IAAI,CAACL,MAAM,EAAE+B,GAAG,CAAC;UAC/C,IAAI,CAACxB,SAAS,GAAC;UACf,MAAM,IAAI,CAACK,SAAS,CAAC,CAAC,EAAE;UACxB,IAAI,CAACJ,YAAY,CAACC,OAAM,GAAI,2BAA2B;QACzD,EAAE,OAAOS,KAAK,EAAE;UACdD,OAAO,CAACC,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;QACxD;MACF;IACF,CAAC;IACDgB,WAAWA,CAACC,KAAK,EAAE;MACjB,OAAO,0BAA0BA,KAAK,EAAE;IAC1C,CAAC;IACDC,WAAWA,CAACV,KAAK,EAAE;MACjB;MACA,OAAO,IAAIA,KAAK,CAACW,OAAO,CAAC,CAAC,CAAC,EAAE;IAC/B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}