{"ast":null,"code":"import { getCart, removeBookFromCart } from \"@/services/cartService\";\nexport default {\n  name: 'CartSummary',\n  props: {\n    cartId: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      cartItems: [],\n      cartTotal: 0\n    };\n  },\n  async mounted() {\n    await this.fetchCart();\n  },\n  methods: {\n    async fetchCart() {\n      try {\n        const response = await getCart(2);\n        const cartData = response.data;\n        this.cartItems = cartData.comicBooks;\n        this.cartTotal = this.cartItems.reduce((total, item) => total + item.price * item.quantity, 0);\n\n        // Emit the cart item count to the parent component\n        this.$emit('update-cart-count', this.cartItems.length);\n      } catch (error) {\n        console.error('Error fetching cart items:', error);\n      }\n    },\n    async removeItem(sku) {\n      const isConfirmed = confirm('Are you sure you want to remove this item from the cart?');\n      if (isConfirmed) {\n        try {\n          await removeBookFromCart(2, sku);\n          await this.fetchCart(); // Refresh the cart list\n        } catch (error) {\n          console.error('Error removing item from cart:', error);\n        }\n      }\n    },\n    getPhotoUrl(photo) {\n      return `data:image/jpeg;base64,${photo}`;\n    }\n  }\n};","map":{"version":3,"names":["getCart","removeBookFromCart","name","props","cartId","type","String","required","data","cartItems","cartTotal","mounted","fetchCart","methods","response","cartData","comicBooks","reduce","total","item","price","quantity","$emit","length","error","console","removeItem","sku","isConfirmed","confirm","getPhotoUrl","photo"],"sources":["C:\\Users\\User\\Documents\\IntelliJ Projects 2024\\comic_city_project\\src\\frontend\\src\\components\\CartSummary.vue"],"sourcesContent":["<template>\r\n  <div class=\"cart-summary\" v-if=\"cartItems.length\">\r\n    <h2>Cart</h2>\r\n    <div v-for=\"item in cartItems\" :key=\"item.sku\" class=\"cart-item\">\r\n      <!-- Remove Button -->\r\n      <div class=\"remove-item\" @click=\"removeItem(item.sku)\">×</div>\r\n\r\n      <!-- Item Image -->\r\n      <div\r\n          class=\"cart-item-image\"\r\n          :style=\"{ backgroundImage: `url(${getPhotoUrl(item.photo)})` }\"\r\n      ></div>\r\n\r\n      <!-- Item Details -->\r\n      <div class=\"cart-item-details\">\r\n        <p class=\"text-base\">{{ item.name }}</p>\r\n        <p class=\"text-sm\">{{ item.price }} • {{ item.quantity }}</p>\r\n      </div>\r\n    </div>\r\n    <div class=\"cart-footer\">\r\n      <div>\r\n        <p class=\"text-sm\">Total: R{{ cartTotal }}</p>\r\n        <p class=\"text-sm\">Items: {{ cartItems.length }}</p>\r\n      </div>\r\n      <div class=\"cart-footer-actions\">\r\n        <a href=\"#\" class=\"view-cart\">View Cart</a>\r\n        <button class=\"checkout\">Checkout</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getCart, removeBookFromCart } from \"@/services/cartService\";\r\n\r\nexport default {\r\n  name: 'CartSummary',\r\n  props: {\r\n    cartId: {\r\n      type: String,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      cartItems: [],\r\n      cartTotal: 0,\r\n    };\r\n  },\r\n  async mounted() {\r\n    await this.fetchCart();\r\n  },\r\n  methods: {\r\n    async fetchCart() {\r\n      try {\r\n\r\n        const response = await getCart(2);\r\n        const cartData = response.data;\r\n\r\n        this.cartItems = cartData.comicBooks;\r\n        this.cartTotal = this.cartItems.reduce((total, item) => total + item.price * item.quantity, 0);\r\n\r\n        // Emit the cart item count to the parent component\r\n        this.$emit('update-cart-count', this.cartItems.length);\r\n      } catch (error) {\r\n        console.error('Error fetching cart items:', error);\r\n      }\r\n    },\r\n    async removeItem(sku) {\r\n      const isConfirmed = confirm('Are you sure you want to remove this item from the cart?');\r\n      if (isConfirmed) {\r\n        try {\r\n          await removeBookFromCart(2, sku);\r\n          await this.fetchCart(); // Refresh the cart list\r\n        } catch (error) {\r\n          console.error('Error removing item from cart:', error);\r\n        }\r\n      }\r\n    },\r\n    getPhotoUrl(photo) {\r\n      return `data:image/jpeg;base64,${photo}`;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Cart Summary styles */\r\n.cart-summary {\r\n  display: block;\r\n  position: absolute;\r\n  right: 0;\r\n  top: 100%;\r\n  width: 300px;\r\n  background-color: #1e2a38;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\r\n  padding: 1rem;\r\n  z-index: 1000;\r\n}\r\n\r\n.cart-item {\r\n  display: flex;\r\n  gap: 1rem;\r\n  background-color: #2a3a4b;\r\n  padding: 0.75rem;\r\n  border-bottom: 1px solid #444;\r\n  position: relative; /* Needed for positioning the remove button */\r\n}\r\n\r\n.cart-item:last-child {\r\n  border-bottom: none;\r\n}\r\n\r\n.cart-item-image {\r\n  background-size: cover;\r\n  background-position: center;\r\n  width: 70px;\r\n  height: 70px;\r\n  border-radius: 8px;\r\n}\r\n\r\n.cart-item-details {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n}\r\n\r\n.text-sm {\r\n  color: #a0b3c2;\r\n}\r\n\r\n.text-base {\r\n  color: #e0e0e0;\r\n}\r\n\r\n.cart-footer {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 0.75rem 0;\r\n}\r\n\r\n.cart-footer-actions {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.view-cart {\r\n  background-color: #2c3e50;\r\n  color: white;\r\n  text-align: center;\r\n  font-weight: bold;\r\n  padding: 0.5rem;\r\n  border-radius: 8px;\r\n  text-decoration: none;\r\n}\r\n\r\n.checkout {\r\n  background-color: #3498db;\r\n  color: white;\r\n  font-weight: bold;\r\n  padding: 0.5rem;\r\n  border-radius: 8px;\r\n  border: none;\r\n  cursor: pointer;\r\n}\r\n\r\n/* Remove Button styles */\r\n.remove-item {\r\n  position: absolute;\r\n  top: -8px;\r\n  right: -8px;\r\n  background-color: red;\r\n  color: white;\r\n  border-radius: 50%;\r\n  width: 20px;\r\n  height: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n}\r\n</style>\r\n"],"mappings":"AAiCA,SAASA,OAAO,EAAEC,kBAAiB,QAAS,wBAAwB;AAEpE,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,KAAK,EAAE;IACLC,MAAM,EAAE;MACNC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,EAAE;MACbC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,MAAM,IAAI,CAACC,SAAS,CAAC,CAAC;EACxB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,SAASA,CAAA,EAAG;MAChB,IAAI;QAEF,MAAME,QAAO,GAAI,MAAMd,OAAO,CAAC,CAAC,CAAC;QACjC,MAAMe,QAAO,GAAID,QAAQ,CAACN,IAAI;QAE9B,IAAI,CAACC,SAAQ,GAAIM,QAAQ,CAACC,UAAU;QACpC,IAAI,CAACN,SAAQ,GAAI,IAAI,CAACD,SAAS,CAACQ,MAAM,CAAC,CAACC,KAAK,EAAEC,IAAI,KAAKD,KAAI,GAAIC,IAAI,CAACC,KAAI,GAAID,IAAI,CAACE,QAAQ,EAAE,CAAC,CAAC;;QAE9F;QACA,IAAI,CAACC,KAAK,CAAC,mBAAmB,EAAE,IAAI,CAACb,SAAS,CAACc,MAAM,CAAC;MACxD,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IACD,MAAME,UAAUA,CAACC,GAAG,EAAE;MACpB,MAAMC,WAAU,GAAIC,OAAO,CAAC,0DAA0D,CAAC;MACvF,IAAID,WAAW,EAAE;QACf,IAAI;UACF,MAAM3B,kBAAkB,CAAC,CAAC,EAAE0B,GAAG,CAAC;UAChC,MAAM,IAAI,CAACf,SAAS,CAAC,CAAC,EAAE;QAC1B,EAAE,OAAOY,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;QACxD;MACF;IACF,CAAC;IACDM,WAAWA,CAACC,KAAK,EAAE;MACjB,OAAO,0BAA0BA,KAAK,EAAE;IAC1C;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}