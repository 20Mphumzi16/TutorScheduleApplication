{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-164a9b66\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0,\n  class: \"cart-summary\"\n};\nconst _hoisted_2 = {\n  class: \"cart-item-details\"\n};\nconst _hoisted_3 = {\n  class: \"text-base\"\n};\nconst _hoisted_4 = {\n  class: \"text-sm\"\n};\nconst _hoisted_5 = {\n  class: \"cart-footer\"\n};\nconst _hoisted_6 = {\n  class: \"text-sm\"\n};\nconst _hoisted_7 = {\n  class: \"text-sm\"\n};\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"cart-footer-actions\"\n}, [/*#__PURE__*/_createElementVNode(\"a\", {\n  href: \"#\",\n  class: \"view-cart\"\n}, \"View Cart\"), /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"checkout\"\n}, \"Checkout\")], -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $data.cartItems.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.cartItems, item => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: item.id,\n      class: \"cart-item\"\n    }, [_createElementVNode(\"div\", {\n      class: \"cart-item-image\",\n      style: _normalizeStyle({\n        backgroundImage: `url(${item.image})`\n      })\n    }, null, 4 /* STYLE */), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"p\", _hoisted_3, _toDisplayString(item.title), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_4, _toDisplayString(item.price) + \" • \" + _toDisplayString(item.quantity), 1 /* TEXT */)])]);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", null, [_createElementVNode(\"p\", _hoisted_6, \"Total: $\" + _toDisplayString($options.cartTotal), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_7, \"Items: \" + _toDisplayString($data.cartItems.length), 1 /* TEXT */)]), _hoisted_8])])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"names":["key","class","_createElementVNode","href","$data","cartItems","length","_createElementBlock","_hoisted_1","_Fragment","_renderList","item","id","style","_normalizeStyle","backgroundImage","image","_hoisted_2","_hoisted_3","_toDisplayString","title","_hoisted_4","price","quantity","_hoisted_5","_hoisted_6","$options","cartTotal","_hoisted_7","_hoisted_8","_createCommentVNode"],"sources":["C:\\Users\\User\\Documents\\IntelliJ Projects 2024\\comic_city_project\\src\\frontend\\src\\components\\CartSummary.vue"],"sourcesContent":["<template>\r\n  <div class=\"cart-summary\" v-if=\"cartItems.length\">\r\n    <div v-for=\"item in cartItems\" :key=\"item.id\" class=\"cart-item\">\r\n      <div\r\n          class=\"cart-item-image\"\r\n          :style=\"{ backgroundImage: `url(${item.image})` }\"\r\n      ></div>\r\n      <div class=\"cart-item-details\">\r\n        <p class=\"text-base\">{{ item.title }}</p>\r\n        <p class=\"text-sm\">{{ item.price }} • {{ item.quantity }}</p>\r\n      </div>\r\n    </div>\r\n    <div class=\"cart-footer\">\r\n      <div>\r\n        <p class=\"text-sm\">Total: ${{ cartTotal }}</p>\r\n        <p class=\"text-sm\">Items: {{ cartItems.length }}</p>\r\n      </div>\r\n      <div class=\"cart-footer-actions\">\r\n        <a href=\"#\" class=\"view-cart\">View Cart</a>\r\n        <button class=\"checkout\">Checkout</button>\r\n\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport {getCart} from 'src/services/cartService'; // Adjust the import path as necessary\r\n\r\nexport default {\r\n  name: 'CartSummary',\r\n  data() {\r\n    return {\r\n      cartItems: [],\r\n      loading: true,\r\n      error: null,\r\n    };\r\n  },\r\n  computed: {\r\n    cartTotal() {\r\n      return this.cartItems.reduce((total, item) => {\r\n        return total + item.price * item.quantity;\r\n      }, 0);\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchCartItems();\r\n  },\r\n  methods: {\r\n    async fetchCartItems() {\r\n      try {\r\n        this.loading = true;\r\n        const cartId = '1'; // Replace with actual cart ID logic\r\n        const response = await getCart(cartId);\r\n        this.cartItems = response.data.items; // Assuming the API response contains an 'items' array\r\n      } catch (error) {\r\n        this.error = 'Failed to load cart items.';\r\n        console.error(error);\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Cart Summary styles (as in your previous style section) */\r\n.cart-summary {\r\n  display: none;\r\n  position: absolute;\r\n  right: 0;\r\n  top: 100%;\r\n  width: 300px;\r\n  background-color: #1e2a38;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\r\n  padding: 1rem;\r\n  z-index: 1000;\r\n}\r\n\r\n.cart-item {\r\n  display: flex;\r\n  gap: 1rem;\r\n  background-color: #2a3a4b;\r\n  padding: 0.75rem;\r\n  border-bottom: 1px solid #444;\r\n}\r\n\r\n.cart-item:last-child {\r\n  border-bottom: none;\r\n}\r\n\r\n.cart-item-image {\r\n  background-size: cover;\r\n  background-position: center;\r\n  width: 70px;\r\n  height: 70px;\r\n  border-radius: 8px;\r\n}\r\n\r\n.cart-item-details {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n}\r\n\r\n.text-sm {\r\n  color: #a0b3c2;\r\n}\r\n\r\n.text-base {\r\n  color: #e0e0e0;\r\n}\r\n\r\n.cart-footer {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 0.75rem 0;\r\n}\r\n\r\n.cart-footer-actions {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.view-cart {\r\n  background-color: #2c3e50;\r\n  color: white;\r\n  text-align: center;\r\n  font-weight: bold;\r\n  padding: 0.5rem;\r\n  border-radius: 8px;\r\n  text-decoration: none;\r\n}\r\n\r\n.checkout {\r\n  background-color: #3498db;\r\n  color: white;\r\n  font-weight: bold;\r\n  padding: 0.5rem;\r\n  border-radius: 8px;\r\n  border: none;\r\n  cursor: pointer;\r\n}\r\n</style>\r\n"],"mappings":";;;EAAAA,GAAA;EACOC,KAAK,EAAC;;;EAMFA,KAAK,EAAC;AAAmB;;EACzBA,KAAK,EAAC;AAAW;;EACjBA,KAAK,EAAC;AAAS;;EAGjBA,KAAK,EAAC;AAAa;;EAEjBA,KAAK,EAAC;AAAS;;EACfA,KAAK,EAAC;AAAS;gEAEpBC,mBAAA,CAIM;EAJDD,KAAK,EAAC;AAAqB,I,aAC9BC,mBAAA,CAA2C;EAAxCC,IAAI,EAAC,GAAG;EAACF,KAAK,EAAC;GAAY,WAAS,G,aACvCC,mBAAA,CAA0C;EAAlCD,KAAK,EAAC;AAAU,GAAC,UAAQ,E;;SAlBPG,KAAA,CAAAC,SAAS,CAACC,MAAM,I,cAAhDC,mBAAA,CAuBM,OAvBNC,UAuBM,I,kBAtBJD,mBAAA,CASME,SAAA,QAXVC,WAAA,CAEwBN,KAAA,CAAAC,SAAS,EAAjBM,IAAI;yBAAhBJ,mBAAA,CASM;MAT0BP,GAAG,EAAEW,IAAI,CAACC,EAAE;MAAEX,KAAK,EAAC;QAClDC,mBAAA,CAGO;MAFHD,KAAK,EAAC,iBAAiB;MACtBY,KAAK,EALhBC,eAAA;QAAAC,eAAA,SAK4CJ,IAAI,CAACK,KAAK;MAAA;6BAEhDd,mBAAA,CAGM,OAHNe,UAGM,GAFJf,mBAAA,CAAyC,KAAzCgB,UAAyC,EAAAC,gBAAA,CAAjBR,IAAI,CAACS,KAAK,kBAClClB,mBAAA,CAA6D,KAA7DmB,UAA6D,EAAAF,gBAAA,CAAvCR,IAAI,CAACW,KAAK,IAAG,KAAG,GAAAH,gBAAA,CAAGR,IAAI,CAACY,QAAQ,iB;kCAG1DrB,mBAAA,CAUM,OAVNsB,UAUM,GATJtB,mBAAA,CAGM,cAFJA,mBAAA,CAA8C,KAA9CuB,UAA8C,EAA3B,UAAQ,GAAAN,gBAAA,CAAGO,QAAA,CAAAC,SAAS,kBACvCzB,mBAAA,CAAoD,KAApD0B,UAAoD,EAAjC,SAAO,GAAAT,gBAAA,CAAGf,KAAA,CAAAC,SAAS,CAACC,MAAM,iB,GAE/CuB,UAIM,C,OArBZC,mBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}