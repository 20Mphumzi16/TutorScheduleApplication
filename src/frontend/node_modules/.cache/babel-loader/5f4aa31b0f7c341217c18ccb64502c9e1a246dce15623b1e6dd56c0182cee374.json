{"ast":null,"code":"export default {\n  data() {\n    return {\n      firstName: '',\n      middleName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      mobile: '',\n      errorMessage: ''\n    };\n  },\n  computed: {\n    isValidForm() {\n      return this.firstName && this.lastName && this.email && this.password;\n    }\n  },\n  methods: {\n    async createAccount() {\n      if (!this.isValidForm) {\n        this.errorMessage = 'Please fill out all required fields.';\n        return;\n      }\n      try {\n        const response = await fetch('/api/comiccity/Customer/create', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            customerId: 1,\n            name: {\n              firstName: this.firstName,\n              middleName: this.middleName,\n              lastName: this.lastName\n            },\n            password: this.password,\n            contact: {\n              email: this.email,\n              mobile: this.mobile\n            }\n          })\n        });\n        if (response.ok) {\n          alert('Account created successfully!');\n          // Redirect or clear form\n        } else {\n          const errorText = await response.text();\n          this.errorMessage = `Error: ${errorText}`;\n        }\n      } catch (error) {\n        this.errorMessage = 'An error occurred while creating your account.';\n        console.error('Error:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","firstName","middleName","lastName","email","password","mobile","errorMessage","computed","isValidForm","methods","createAccount","response","fetch","method","headers","body","JSON","stringify","customerId","name","contact","ok","alert","errorText","text","error","console"],"sources":["C:\\Users\\PC\\Documents\\javaApplications\\My_comic_city_project_0.2\\src\\frontend\\src\\components\\CreateAccount.vue"],"sourcesContent":["<template>\r\n  <div class=\"create-account-container\">\r\n    <h1 class=\"title\">Create an Account</h1>\r\n    <form @submit.prevent=\"createAccount\">\r\n      <label for=\"firstName\">First Name:</label>\r\n      <input id=\"firstName\" v-model=\"firstName\" placeholder=\"First Name\" required />\r\n\r\n      <label for=\"middleName\">Middle Name:</label>\r\n      <input id=\"middleName\" v-model=\"middleName\" placeholder=\"Middle Name\" />\r\n\r\n      <label for=\"lastName\">Last Name:</label>\r\n      <input id=\"lastName\" v-model=\"lastName\" placeholder=\"Last Name\" required />\r\n\r\n      <label for=\"email\">Email:</label>\r\n      <input id=\"email\" type=\"email\" v-model=\"email\" placeholder=\"Email\" required />\r\n\r\n      <label for=\"password\">Password:</label>\r\n      <input id=\"password\" type=\"password\" v-model=\"password\" placeholder=\"Password\" required />\r\n\r\n      <label for=\"mobile\">Mobile:</label>\r\n      <input id=\"mobile\" v-model=\"mobile\" placeholder=\"Mobile\" />\r\n\r\n      <button type=\"submit\" :disabled=\"!isValidForm\">Create Account</button>\r\n    </form>\r\n    <p v-if=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      firstName: '',\r\n      middleName: '',\r\n      lastName: '',\r\n      email: '',\r\n      password: '',\r\n      mobile: '',\r\n      errorMessage: ''\r\n    };\r\n  },\r\n  computed: {\r\n    isValidForm() {\r\n      return this.firstName && this.lastName && this.email && this.password;\r\n    }\r\n  },\r\n  methods: {\r\n    async createAccount() {\r\n      if (!this.isValidForm) {\r\n        this.errorMessage = 'Please fill out all required fields.';\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await fetch('/api/comiccity/Customer/create', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n\r\n          body: JSON.stringify({\r\n            customerId: 1,\r\n            name: {\r\n              firstName: this.firstName,\r\n              middleName: this.middleName,\r\n              lastName: this.lastName\r\n            },\r\n            password: this.password,\r\n            contact: {\r\n            email: this.email,\r\n            mobile: this.mobile\r\n              }\r\n          })\r\n        });\r\n\r\n        if (response.ok) {\r\n          alert('Account created successfully!');\r\n          // Redirect or clear form\r\n        } else {\r\n          const errorText = await response.text();\r\n          this.errorMessage = `Error: ${errorText}`;\r\n        }\r\n      } catch (error) {\r\n        this.errorMessage = 'An error occurred while creating your account.';\r\n        console.error('Error:', error);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.create-account-container {\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.title {\r\n  font-size: 24px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\nform {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\nlabel {\r\n  margin: 10px 0 5px;\r\n}\r\n\r\ninput {\r\n  padding: 10px;\r\n  margin-bottom: 15px;\r\n  border-radius: 4px;\r\n  border: 1px solid #ddd;\r\n}\r\n\r\nbutton {\r\n  background-color: #007bff;\r\n  color: white;\r\n  padding: 10px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton:disabled {\r\n  background-color: #6c757d;\r\n}\r\n\r\n.error-message {\r\n  color: red;\r\n  margin-top: 15px;\r\n}\r\n</style>\r\n"],"mappings":"AA6BA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,EAAE;MACbC,UAAU,EAAE,EAAE;MACdC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE,EAAE;MACVC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,WAAWA,CAAA,EAAG;MACZ,OAAO,IAAI,CAACR,SAAQ,IAAK,IAAI,CAACE,QAAO,IAAK,IAAI,CAACC,KAAI,IAAK,IAAI,CAACC,QAAQ;IACvE;EACF,CAAC;EACDK,OAAO,EAAE;IACP,MAAMC,aAAaA,CAAA,EAAG;MACpB,IAAI,CAAC,IAAI,CAACF,WAAW,EAAE;QACrB,IAAI,CAACF,YAAW,GAAI,sCAAsC;QAC1D;MACF;MAEA,IAAI;QACF,MAAMK,QAAO,GAAI,MAAMC,KAAK,CAAC,gCAAgC,EAAE;UAC7DC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UAEDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnBC,UAAU,EAAE,CAAC;YACbC,IAAI,EAAE;cACJnB,SAAS,EAAE,IAAI,CAACA,SAAS;cACzBC,UAAU,EAAE,IAAI,CAACA,UAAU;cAC3BC,QAAQ,EAAE,IAAI,CAACA;YACjB,CAAC;YACDE,QAAQ,EAAE,IAAI,CAACA,QAAQ;YACvBgB,OAAO,EAAE;cACTjB,KAAK,EAAE,IAAI,CAACA,KAAK;cACjBE,MAAM,EAAE,IAAI,CAACA;YACX;UACJ,CAAC;QACH,CAAC,CAAC;QAEF,IAAIM,QAAQ,CAACU,EAAE,EAAE;UACfC,KAAK,CAAC,+BAA+B,CAAC;UACtC;QACF,OAAO;UACL,MAAMC,SAAQ,GAAI,MAAMZ,QAAQ,CAACa,IAAI,CAAC,CAAC;UACvC,IAAI,CAAClB,YAAW,GAAI,UAAUiB,SAAS,EAAE;QAC3C;MACF,EAAE,OAAOE,KAAK,EAAE;QACd,IAAI,CAACnB,YAAW,GAAI,gDAAgD;QACpEoB,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAChC;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}