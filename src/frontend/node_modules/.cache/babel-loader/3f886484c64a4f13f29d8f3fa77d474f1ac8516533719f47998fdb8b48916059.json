{"ast":null,"code":"import NavBar from '@/components/NavBar.vue';\nimport HeroSection from '@/components/HeroSection.vue';\nimport ProductGrid from '@/components/ProductGrid.vue';\nimport FooterSection from '@/components/FooterSection.vue';\nimport { getAllComicBooks } from '@/services/comicBookService';\nimport { addBookToCart, getCustomerCart } from '@/services/cartService';\nimport { addBookToWishList, getCustomerWishList } from '@/services/wishlistService';\nexport default {\n  name: 'HomePage',\n  components: {\n    NavBar,\n    HeroSection,\n    ProductGrid,\n    FooterSection\n  },\n  data() {\n    return {\n      newArrivals: [],\n      hotPicks: [],\n      wishlistItems: [],\n      cartItems: [],\n      cart: '',\n      wishList: '',\n      loading: true,\n      error: null\n    };\n  },\n  created() {\n    this.fetchComicBooks();\n  },\n  methods: {\n    async fetchComicBooks() {\n      try {\n        const response = await getAllComicBooks();\n        const allComics = response.data;\n\n        // Split comics between new arrivals and hot picks\n        this.newArrivals = allComics.slice(0, 5);\n        this.hotPicks = allComics.slice(5, 10);\n        this.loading = false;\n      } catch (error) {\n        this.error = 'Failed to load comic books.';\n        this.loading = false;\n      }\n    },\n    async addToCart(sku) {\n      const userEmail = localStorage.getItem('userEmail');\n      if (!userEmail) {\n        console.error('No user email found. Please log in.');\n        return;\n      }\n      try {\n        const response = await getCustomerCart(userEmail);\n        this.cart = response.data;\n        this.cartItems = this.cart.comicBooks || [];\n        await addBookToCart(this.cart.cartId, sku); // Send the correct SKU to the API\n        alert('Comic added to cart!');\n      } catch (error) {\n        alert('Failed to add comic to cart.');\n      }\n    },\n    async toggleWishlist(sku) {\n      const userEmail = localStorage.getItem('userEmail');\n      if (!userEmail) {\n        console.error('No user email found. Please log in.');\n        return;\n      }\n      try {\n        // Call wishlist service to toggle the comic in the wishlist\n        const response = await getCustomerWishList(userEmail);\n        this.wishList = response.data;\n        this.wishlistItems = this.wishList.comicBooks || [];\n        await addBookToWishList(this.wishList.wishListId, sku);\n        alert('Comic added to WishList!');\n      } catch (error) {\n        alert('Failed to update wishlist.');\n      }\n    }\n  }\n};","map":{"version":3,"names":["NavBar","HeroSection","ProductGrid","FooterSection","getAllComicBooks","addBookToCart","getCustomerCart","addBookToWishList","getCustomerWishList","name","components","data","newArrivals","hotPicks","wishlistItems","cartItems","cart","wishList","loading","error","created","fetchComicBooks","methods","response","allComics","slice","addToCart","sku","userEmail","localStorage","getItem","console","comicBooks","cartId","alert","toggleWishlist","wishListId"],"sources":["C:\\Users\\PC\\Documents\\javaApplications\\My_comic_city_project_0.2\\src\\frontend\\src\\views\\HomePage.vue"],"sourcesContent":["<template>\r\n  <div id=\"home-page\">\r\n    <NavBar />\r\n    <HeroSection/>\r\n    <ProductGrid title=\"New Arrivals\" :comics=\"newArrivals\" :wishlist=\"wishlist\" @add-to-cart=\"addToCart\" @toggle-wishlist=\"toggleWishlist\" />\r\n    <ProductGrid title=\"Hot Picks\" :comics=\"hotPicks\" :wishlist=\"wishlist\" @add-to-cart=\"addToCart\" @toggle-wishlist=\"toggleWishlist\" />\r\n    <FooterSection />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport NavBar from '@/components/NavBar.vue';\r\nimport HeroSection from '@/components/HeroSection.vue';\r\nimport ProductGrid from '@/components/ProductGrid.vue';\r\nimport FooterSection from '@/components/FooterSection.vue';\r\nimport { getAllComicBooks } from '@/services/comicBookService';\r\nimport {addBookToCart, getCustomerCart} from '@/services/cartService';\r\nimport {addBookToWishList, getCustomerWishList} from '@/services/wishlistService';\r\n\r\nexport default {\r\n  name: 'HomePage',\r\n  components: {\r\n    NavBar,\r\n    HeroSection,\r\n    ProductGrid,\r\n    FooterSection\r\n  },\r\n  data() {\r\n    return {\r\n      newArrivals: [],\r\n      hotPicks: [],\r\n      wishlistItems: [],\r\n      cartItems:[],\r\n      cart:'',\r\n      wishList:'',\r\n      loading: true,\r\n      error: null,\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchComicBooks();\r\n  },\r\n  methods: {\r\n    async fetchComicBooks() {\r\n      try {\r\n        const response = await getAllComicBooks();\r\n        const allComics = response.data;\r\n\r\n        // Split comics between new arrivals and hot picks\r\n        this.newArrivals = allComics.slice(0, 5);\r\n        this.hotPicks = allComics.slice(5, 10);\r\n\r\n        this.loading = false;\r\n      } catch (error) {\r\n        this.error = 'Failed to load comic books.';\r\n        this.loading = false;\r\n      }\r\n    },\r\n    async addToCart(sku) {\r\n      const userEmail=localStorage.getItem('userEmail');\r\n\r\n      if (!userEmail) {\r\n        console.error('No user email found. Please log in.');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response=await getCustomerCart(userEmail);\r\n        this.cart = response.data;\r\n        this.cartItems=this.cart.comicBooks||[];\r\n        await addBookToCart(this.cart.cartId, sku); // Send the correct SKU to the API\r\n        alert('Comic added to cart!');\r\n      } catch (error) {\r\n        alert('Failed to add comic to cart.');\r\n      }\r\n    },\r\n    async toggleWishlist(sku) {\r\n      const userEmail=localStorage.getItem('userEmail');\r\n\r\n      if (!userEmail) {\r\n        console.error('No user email found. Please log in.');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        // Call wishlist service to toggle the comic in the wishlist\r\n        const response=await getCustomerWishList(userEmail);\r\n        this.wishList = response.data;\r\n        this.wishlistItems=this.wishList.comicBooks||[];\r\n        await addBookToWishList (this.wishList.wishListId, sku);\r\n        alert('Comic added to WishList!');\r\n      } catch (error) {\r\n        alert('Failed to update wishlist.');\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Styles scoped to HomePage */\r\nbody {\r\n  margin: 0;\r\n  font-family: 'Roboto', sans-serif;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}