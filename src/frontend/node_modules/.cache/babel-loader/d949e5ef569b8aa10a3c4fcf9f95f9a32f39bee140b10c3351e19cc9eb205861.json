{"ast":null,"code":"import NavBar from './components/NavBar.vue';\nimport HeroSection from './components/HeroSection.vue';\nimport ProductGrid from './components/ProductGrid.vue';\nimport FooterSection from './components/FooterSection.vue';\nimport { getAllComicBooks } from './services/comicBookService';\nexport default {\n  name: 'App',\n  components: {\n    NavBar,\n    HeroSection,\n    ProductGrid,\n    FooterSection\n  },\n  data() {\n    return {\n      newArrivals: [],\n      hotPicks: [],\n      loading: true,\n      error: null\n    };\n  },\n  created() {\n    this.fetchComicBooks();\n  },\n  methods: {\n    async fetchComicBooks() {\n      try {\n        const response = await getAllComicBooks();\n        const allComics = response.data;\n\n        // Assuming 'newArrivals' and 'hotPicks' are simply the first and second halves of the comics array\n        this.newArrivals = allComics.slice(0, 5); // First 5 comics for newArrivals\n        this.hotPicks = allComics.slice(5, 10); // Next 5 comics for hotPicks\n\n        this.loading = false;\n      } catch (error) {\n        this.error = 'Failed to load comic books.';\n        this.loading = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["NavBar","HeroSection","ProductGrid","FooterSection","getAllComicBooks","name","components","data","newArrivals","hotPicks","loading","error","created","fetchComicBooks","methods","response","allComics","slice"],"sources":["C:\\Users\\User\\Documents\\IntelliJ Projects 2024\\comic_city_project\\src\\frontend\\src\\App.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <NavBar />\r\n    <HeroSection />\r\n    <ProductGrid title=\"New Arrivals\" :comics=\"newArrivals\" />\r\n    <ProductGrid title=\"Hot Picks\" :comics=\"hotPicks\" />\r\n    <FooterSection />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport NavBar from './components/NavBar.vue';\r\nimport HeroSection from './components/HeroSection.vue';\r\nimport ProductGrid from './components/ProductGrid.vue';\r\nimport FooterSection from './components/FooterSection.vue';\r\nimport { getAllComicBooks } from './services/comicBookService';\r\n\r\nexport default {\r\n  name: 'App',\r\n  components: {\r\n    NavBar,\r\n    HeroSection,\r\n    ProductGrid,\r\n    FooterSection\r\n  },\r\n  data() {\r\n    return {\r\n      newArrivals: [],\r\n      hotPicks: [],\r\n      loading: true,\r\n      error: null,\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchComicBooks();\r\n  },\r\n  methods: {\r\n    async fetchComicBooks() {\r\n      try {\r\n        const response = await getAllComicBooks();\r\n        const allComics = response.data;\r\n\r\n        // Assuming 'newArrivals' and 'hotPicks' are simply the first and second halves of the comics array\r\n        this.newArrivals = allComics.slice(0, 5); // First 5 comics for newArrivals\r\n        this.hotPicks = allComics.slice(5, 10); // Next 5 comics for hotPicks\r\n\r\n        this.loading = false;\r\n      } catch (error) {\r\n        this.error = 'Failed to load comic books.';\r\n        this.loading = false;\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n<style>\r\n/* General styles, global settings */\r\nbody {\r\n  margin: 0;\r\n  font-family: 'Roboto', sans-serif;\r\n}\r\n</style>\r\n"],"mappings":"AAWA,OAAOA,MAAK,MAAO,yBAAyB;AAC5C,OAAOC,WAAU,MAAO,8BAA8B;AACtD,OAAOC,WAAU,MAAO,8BAA8B;AACtD,OAAOC,aAAY,MAAO,gCAAgC;AAC1D,SAASC,gBAAe,QAAS,6BAA6B;AAE9D,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,UAAU,EAAE;IACVN,MAAM;IACNC,WAAW;IACXC,WAAW;IACXC;EACF,CAAC;EACDI,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,EAAE;MACfC,QAAQ,EAAE,EAAE;MACZC,OAAO,EAAE,IAAI;MACbC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,eAAe,CAAC,CAAC;EACxB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,eAAeA,CAAA,EAAG;MACtB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMX,gBAAgB,CAAC,CAAC;QACzC,MAAMY,SAAQ,GAAID,QAAQ,CAACR,IAAI;;QAE/B;QACA,IAAI,CAACC,WAAU,GAAIQ,SAAS,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;QAC1C,IAAI,CAACR,QAAO,GAAIO,SAAS,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;;QAExC,IAAI,CAACP,OAAM,GAAI,KAAK;MACtB,EAAE,OAAOC,KAAK,EAAE;QACd,IAAI,CAACA,KAAI,GAAI,6BAA6B;QAC1C,IAAI,CAACD,OAAM,GAAI,KAAK;MACtB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}