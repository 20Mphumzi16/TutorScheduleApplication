{"ast":null,"code":"import { getCart, updateCart } from \"@/services/cartService\";\nexport default {\n  name: 'CartSummary',\n  props: {\n    cartId: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      cartItems: [],\n      cartTotal: 0\n    };\n  },\n  async mounted() {\n    try {\n      const response = await getCart(2);\n      const cartData = response.data;\n      this.cartItems = cartData.comicBooks;\n      this.cart = cartData;\n      this.cartTotal = this.cartItems.reduce((total, item) => total + item.price, 0);\n\n      // Emit the cart item count to the parent component\n      this.$emit('update-cart-count', this.cartItems.length);\n    } catch (error) {\n      console.error('Error fetching cart items:', error);\n    }\n  },\n  methods: {\n    async removeItem(sku) {\n      const isConfirmed = confirm('Are you sure you want to remove this item from the cart?');\n      if (isConfirmed) {\n        const itemIndex = this.cartItems.findIndex(item => item.sku === sku);\n        if (itemIndex > -1) {\n          this.cartItems.splice(itemIndex, 1);\n          this.cartTotal = this.cartItems.reduce((total, item) => total + item.price, 0);\n          this.cart.comicBooks = this.cartItems;\n          this.cart.updatedDate = new Date().toISOString().split('T')[0];\n          try {\n            await updateCart(this.cart);\n            this.$emit('update-cart-count', this.cartItems.length); // Emit updated cart count\n          } catch (error) {\n            console.error('Error updating cart:', error);\n          }\n        }\n      }\n    },\n    getPhotoUrl(photo) {\n      return `data:image/jpeg;base64,${photo}`;\n    }\n  }\n};","map":{"version":3,"names":["getCart","updateCart","name","props","cartId","type","String","required","data","cartItems","cartTotal","mounted","response","cartData","comicBooks","cart","reduce","total","item","price","$emit","length","error","console","methods","removeItem","sku","isConfirmed","confirm","itemIndex","findIndex","splice","updatedDate","Date","toISOString","split","getPhotoUrl","photo"],"sources":["C:\\Users\\User\\Documents\\IntelliJ Projects 2024\\comic_city_project\\src\\frontend\\src\\components\\CartSummary.vue"],"sourcesContent":["<script>\r\nimport {getCart, updateCart} from \"@/services/cartService\";\r\nexport default {\r\n  name: 'CartSummary',\r\n  props: {\r\n    cartId: {\r\n      type: String,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      cartItems: [],\r\n      cartTotal: 0,\r\n    };\r\n  },\r\n  async mounted() {\r\n    try {\r\n      const response = await getCart(2);\r\n      const cartData = response.data;\r\n\r\n      this.cartItems = cartData.comicBooks;\r\n      this.cart = cartData;\r\n      this.cartTotal = this.cartItems.reduce((total, item) => total + item.price, 0);\r\n\r\n      // Emit the cart item count to the parent component\r\n      this.$emit('update-cart-count', this.cartItems.length);\r\n    } catch (error) {\r\n      console.error('Error fetching cart items:', error);\r\n    }\r\n  },\r\n  methods: {\r\n    async removeItem(sku) {\r\n      const isConfirmed = confirm('Are you sure you want to remove this item from the cart?');\r\n      if (isConfirmed) {\r\n        const itemIndex = this.cartItems.findIndex(item => item.sku === sku);\r\n        if (itemIndex > -1) {\r\n          this.cartItems.splice(itemIndex, 1);\r\n          this.cartTotal = this.cartItems.reduce((total, item) => total + item.price, 0);\r\n          this.cart.comicBooks = this.cartItems;\r\n          this.cart.updatedDate = new Date().toISOString().split('T')[0];\r\n\r\n          try {\r\n            await updateCart(this.cart);\r\n            this.$emit('update-cart-count', this.cartItems.length); // Emit updated cart count\r\n          } catch (error) {\r\n            console.error('Error updating cart:', error);\r\n          }\r\n        }\r\n      }\r\n    },\r\n    getPhotoUrl(photo) {\r\n      return `data:image/jpeg;base64,${photo}`;\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"AACA,SAAQA,OAAO,EAAEC,UAAU,QAAO,wBAAwB;AAC1D,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,KAAK,EAAE;IACLC,MAAM,EAAE;MACNC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,EAAE;MACbC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,IAAI;MACF,MAAMC,QAAO,GAAI,MAAMZ,OAAO,CAAC,CAAC,CAAC;MACjC,MAAMa,QAAO,GAAID,QAAQ,CAACJ,IAAI;MAE9B,IAAI,CAACC,SAAQ,GAAII,QAAQ,CAACC,UAAU;MACpC,IAAI,CAACC,IAAG,GAAIF,QAAQ;MACpB,IAAI,CAACH,SAAQ,GAAI,IAAI,CAACD,SAAS,CAACO,MAAM,CAAC,CAACC,KAAK,EAAEC,IAAI,KAAKD,KAAI,GAAIC,IAAI,CAACC,KAAK,EAAE,CAAC,CAAC;;MAE9E;MACA,IAAI,CAACC,KAAK,CAAC,mBAAmB,EAAE,IAAI,CAACX,SAAS,CAACY,MAAM,CAAC;IACxD,EAAE,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD;EACF,CAAC;EACDE,OAAO,EAAE;IACP,MAAMC,UAAUA,CAACC,GAAG,EAAE;MACpB,MAAMC,WAAU,GAAIC,OAAO,CAAC,0DAA0D,CAAC;MACvF,IAAID,WAAW,EAAE;QACf,MAAME,SAAQ,GAAI,IAAI,CAACpB,SAAS,CAACqB,SAAS,CAACZ,IAAG,IAAKA,IAAI,CAACQ,GAAE,KAAMA,GAAG,CAAC;QACpE,IAAIG,SAAQ,GAAI,CAAC,CAAC,EAAE;UAClB,IAAI,CAACpB,SAAS,CAACsB,MAAM,CAACF,SAAS,EAAE,CAAC,CAAC;UACnC,IAAI,CAACnB,SAAQ,GAAI,IAAI,CAACD,SAAS,CAACO,MAAM,CAAC,CAACC,KAAK,EAAEC,IAAI,KAAKD,KAAI,GAAIC,IAAI,CAACC,KAAK,EAAE,CAAC,CAAC;UAC9E,IAAI,CAACJ,IAAI,CAACD,UAAS,GAAI,IAAI,CAACL,SAAS;UACrC,IAAI,CAACM,IAAI,CAACiB,WAAU,GAAI,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;UAE9D,IAAI;YACF,MAAMlC,UAAU,CAAC,IAAI,CAACc,IAAI,CAAC;YAC3B,IAAI,CAACK,KAAK,CAAC,mBAAmB,EAAE,IAAI,CAACX,SAAS,CAACY,MAAM,CAAC,EAAE;UAC1D,EAAE,OAAOC,KAAK,EAAE;YACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;UAC9C;QACF;MACF;IACF,CAAC;IACDc,WAAWA,CAACC,KAAK,EAAE;MACjB,OAAO,0BAA0BA,KAAK,EAAE;IAC1C;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}