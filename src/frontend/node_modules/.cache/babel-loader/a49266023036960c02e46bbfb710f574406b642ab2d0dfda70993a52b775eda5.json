{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-164a9b66\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0,\n  class: \"cart-summary\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Cart\", -1 /* HOISTED */));\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = {\n  class: \"cart-item-details\"\n};\nconst _hoisted_5 = {\n  class: \"text-base\"\n};\nconst _hoisted_6 = {\n  class: \"text-sm\"\n};\nconst _hoisted_7 = {\n  class: \"cart-footer\"\n};\nconst _hoisted_8 = {\n  class: \"text-sm\"\n};\nconst _hoisted_9 = {\n  class: \"text-sm\"\n};\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"cart-footer-actions\"\n}, [/*#__PURE__*/_createElementVNode(\"a\", {\n  href: \"#\",\n  class: \"view-cart\"\n}, \"View Cart\"), /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"checkout\"\n}, \"Checkout\")], -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $data.cartItems.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.cartItems, item => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: item.sku,\n      class: \"cart-item\"\n    }, [_createCommentVNode(\" Remove Button \"), _createElementVNode(\"div\", {\n      class: \"remove-item\",\n      onClick: $event => $options.removeItem(item.sku)\n    }, \"×\", 8 /* PROPS */, _hoisted_3), _createCommentVNode(\" Item Image \"), _createElementVNode(\"div\", {\n      class: \"cart-item-image\",\n      style: _normalizeStyle({\n        backgroundImage: `url(${$options.getPhotoUrl(item.photo)})`\n      })\n    }, null, 4 /* STYLE */), _createCommentVNode(\" Item Details \"), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"p\", _hoisted_5, _toDisplayString(item.name), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_6, _toDisplayString(item.price) + \" • \" + _toDisplayString(item.quantity), 1 /* TEXT */)])]);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", null, [_createElementVNode(\"p\", _hoisted_8, \"Total: $\" + _toDisplayString($data.cartTotal), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_9, \"Items: \" + _toDisplayString($data.cartItems.length), 1 /* TEXT */)]), _hoisted_10])])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"names":["key","class","_createElementVNode","href","$data","cartItems","length","_createElementBlock","_hoisted_1","_hoisted_2","_Fragment","_renderList","item","sku","_createCommentVNode","onClick","$event","$options","removeItem","_hoisted_3","style","_normalizeStyle","backgroundImage","getPhotoUrl","photo","_hoisted_4","_hoisted_5","_toDisplayString","name","_hoisted_6","price","quantity","_hoisted_7","_hoisted_8","cartTotal","_hoisted_9","_hoisted_10"],"sources":["C:\\Users\\User\\Documents\\IntelliJ Projects 2024\\comic_city_project\\src\\frontend\\src\\components\\CartSummary.vue"],"sourcesContent":["<template>\r\n  <div class=\"cart-summary\" v-if=\"cartItems.length\">\r\n    <h2>Cart</h2>\r\n    <div v-for=\"item in cartItems\" :key=\"item.sku\" class=\"cart-item\">\r\n      <!-- Remove Button -->\r\n      <div class=\"remove-item\" @click=\"removeItem(item.sku)\">×</div>\r\n\r\n      <!-- Item Image -->\r\n      <div\r\n          class=\"cart-item-image\"\r\n          :style=\"{ backgroundImage: `url(${getPhotoUrl(item.photo)})` }\"\r\n      ></div>\r\n\r\n      <!-- Item Details -->\r\n      <div class=\"cart-item-details\">\r\n        <p class=\"text-base\">{{ item.name }}</p>\r\n        <p class=\"text-sm\">{{ item.price }} • {{ item.quantity }}</p>\r\n      </div>\r\n    </div>\r\n    <div class=\"cart-footer\">\r\n      <div>\r\n        <p class=\"text-sm\">Total: ${{ cartTotal }}</p>\r\n        <p class=\"text-sm\">Items: {{ cartItems.length }}</p>\r\n      </div>\r\n      <div class=\"cart-footer-actions\">\r\n        <a href=\"#\" class=\"view-cart\">View Cart</a>\r\n        <button class=\"checkout\">Checkout</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getCart, updateCart } from '@/services/cartService';\r\n\r\nexport default {\r\n  name: 'CartSummary',\r\n  props: {\r\n    cartId: {\r\n      type: String,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      cartItems: [],\r\n      cartTotal: 0\r\n    };\r\n  },\r\n  async mounted() {\r\n    await this.fetchCartItems();\r\n  },\r\n  methods: {\r\n    async fetchCartItems() {\r\n      try {\r\n        const response = await getCart(1);\r\n        console.log('Comic books:', response.data.comicBooks);\r\n        const cartData = response.data;\r\n\r\n        // Set cart items\r\n        this.cartItems = cartData.comicBooks;\r\n        this.cartTotal = cartData.comicBooks.reduce(\r\n            (total, item) => total + item.price * item.quantity,\r\n            0\r\n        );\r\n      } catch (error) {\r\n        console.error('Error fetching cart items:', error);\r\n      }\r\n    },\r\n    getPhotoUrl(photo) {\r\n      // Prepend the base64 image data with the correct data URI scheme for an image\r\n      return `data:image/jpeg;base64,${photo}`;\r\n    },\r\n    async removeItem(sku) {\r\n      // Show confirmation dialog\r\n      const isConfirmed = confirm('Are you sure you want to remove this item from the cart?');\r\n\r\n      if (isConfirmed) {\r\n        const itemIndex = this.cartItems.findIndex(item => item.sku === sku);\r\n        if (itemIndex > -1) {\r\n          // Remove the item from the cartItems array\r\n          this.cartItems.splice(itemIndex, 1);\r\n\r\n          // Update the cart total\r\n          this.cartTotal = this.cartItems.reduce(\r\n              (total, item) => total + item.price ,\r\n              0\r\n          );\r\n\r\n          // Send the updated cart to the server\r\n          try {\r\n            const updatedCart = {\r\n              cartId: this.cartId,\r\n              comicBooks: this.cartItems\r\n            };\r\n            await updateCart(updatedCart);\r\n            console.log('Cart updated successfully');\r\n          } catch (error) {\r\n            console.error('Error updating cart:', error);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Cart Summary styles */\r\n.cart-summary {\r\n  display: block;\r\n  position: absolute;\r\n  right: 0;\r\n  top: 100%;\r\n  width: 300px;\r\n  background-color: #1e2a38;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\r\n  padding: 1rem;\r\n  z-index: 1000;\r\n}\r\n\r\n.cart-item {\r\n  display: flex;\r\n  gap: 1rem;\r\n  background-color: #2a3a4b;\r\n  padding: 0.75rem;\r\n  border-bottom: 1px solid #444;\r\n  position: relative; /* Needed for positioning the remove button */\r\n}\r\n\r\n.cart-item:last-child {\r\n  border-bottom: none;\r\n}\r\n\r\n.cart-item-image {\r\n  background-size: cover;\r\n  background-position: center;\r\n  width: 70px;\r\n  height: 70px;\r\n  border-radius: 8px;\r\n}\r\n\r\n.cart-item-details {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n}\r\n\r\n.text-sm {\r\n  color: #a0b3c2;\r\n}\r\n\r\n.text-base {\r\n  color: #e0e0e0;\r\n}\r\n\r\n.cart-footer {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 0.75rem 0;\r\n}\r\n\r\n.cart-footer-actions {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.view-cart {\r\n  background-color: #2c3e50;\r\n  color: white;\r\n  text-align: center;\r\n  font-weight: bold;\r\n  padding: 0.5rem;\r\n  border-radius: 8px;\r\n  text-decoration: none;\r\n}\r\n\r\n.checkout {\r\n  background-color: #3498db;\r\n  color: white;\r\n  font-weight: bold;\r\n  padding: 0.5rem;\r\n  border-radius: 8px;\r\n  border: none;\r\n  cursor: pointer;\r\n}\r\n\r\n/* Remove Button styles */\r\n.remove-item {\r\n  position: absolute;\r\n  top: -8px;\r\n  right: -8px;\r\n  background-color: red;\r\n  color: white;\r\n  border-radius: 50%;\r\n  width: 20px;\r\n  height: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n}\r\n</style>\r\n"],"mappings":";;;EAAAA,GAAA;EACOC,KAAK,EAAC;;gEACTC,mBAAA,CAAa,YAAT,MAAI;mBAFZ;;EAcWD,KAAK,EAAC;AAAmB;;EACzBA,KAAK,EAAC;AAAW;;EACjBA,KAAK,EAAC;AAAS;;EAGjBA,KAAK,EAAC;AAAa;;EAEjBA,KAAK,EAAC;AAAS;;EACfA,KAAK,EAAC;AAAS;iEAEpBC,mBAAA,CAGM;EAHDD,KAAK,EAAC;AAAqB,I,aAC9BC,mBAAA,CAA2C;EAAxCC,IAAI,EAAC,GAAG;EAACF,KAAK,EAAC;GAAY,WAAS,G,aACvCC,mBAAA,CAA0C;EAAlCD,KAAK,EAAC;AAAU,GAAC,UAAQ,E;;SAzBPG,KAAA,CAAAC,SAAS,CAACC,MAAM,I,cAAhDC,mBAAA,CA4BM,OA5BNC,UA4BM,GA3BJC,UAAa,G,kBACbF,mBAAA,CAeMG,SAAA,QAlBVC,WAAA,CAGwBP,KAAA,CAAAC,SAAS,EAAjBO,IAAI;yBAAhBL,mBAAA,CAeM;MAf0BP,GAAG,EAAEY,IAAI,CAACC,GAAG;MAAEZ,KAAK,EAAC;QACnDa,mBAAA,mBAAsB,EACtBZ,mBAAA,CAA8D;MAAzDD,KAAK,EAAC,aAAa;MAAEc,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,UAAU,CAACN,IAAI,CAACC,GAAG;OAAG,GAAC,iBAL9DM,UAAA,GAOML,mBAAA,gBAAmB,EACnBZ,mBAAA,CAGO;MAFHD,KAAK,EAAC,iBAAiB;MACtBmB,KAAK,EAVhBC,eAAA;QAAAC,eAAA,SAU4CL,QAAA,CAAAM,WAAW,CAACX,IAAI,CAACY,KAAK;MAAA;6BAG5DV,mBAAA,kBAAqB,EACrBZ,mBAAA,CAGM,OAHNuB,UAGM,GAFJvB,mBAAA,CAAwC,KAAxCwB,UAAwC,EAAAC,gBAAA,CAAhBf,IAAI,CAACgB,IAAI,kBACjC1B,mBAAA,CAA6D,KAA7D2B,UAA6D,EAAAF,gBAAA,CAAvCf,IAAI,CAACkB,KAAK,IAAG,KAAG,GAAAH,gBAAA,CAAGf,IAAI,CAACmB,QAAQ,iB;kCAG1D7B,mBAAA,CASM,OATN8B,UASM,GARJ9B,mBAAA,CAGM,cAFJA,mBAAA,CAA8C,KAA9C+B,UAA8C,EAA3B,UAAQ,GAAAN,gBAAA,CAAGvB,KAAA,CAAA8B,SAAS,kBACvChC,mBAAA,CAAoD,KAApDiC,UAAoD,EAAjC,SAAO,GAAAR,gBAAA,CAAGvB,KAAA,CAAAC,SAAS,CAACC,MAAM,iB,GAE/C8B,WAGM,C,OA3BZtB,mBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}